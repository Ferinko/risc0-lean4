# Build and run all the samples.
name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # and a nightly run to make sure samples still build on the latest Lean nightly
  schedule:
    - cron: '0 15 * * *'  # 3PM CET/8AM PT

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        include:
          - name: Linux
            os: ubuntu-latest
          - name: Windows
            os: windows-latest
          - name: macOS
            os: macos-latest

    name: ${{ matrix.name }}
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup elan toolchain on Linux or macOS
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh
          chmod u+x elan-init.sh
          ./elan-init.sh -y --default-toolchain leanprover/lean4:nightly
          echo "Adding location $HOME/.elan/bin to PATH..."
          echo "$HOME/.elan/bin" >> $GITHUB_PATH

      - name: Setup elan toolchain on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          curl -O --location https://raw.githubusercontent.com/leanprover/elan/master/elan-init.ps1
          .\elan-init.ps1 -NoPrompt 1 -DefaultToolchain leanprover/lean4:nightly
          echo "Adding location $HOME\.elan\bin to PATH..."
          echo "$HOME\.elan\bin" >> $env:GITHUB_PATH

      - name: Test elan & lean are working
        run: |
          elan --version
          lean --version

      - name: Build everything
        run: |
          lake build
